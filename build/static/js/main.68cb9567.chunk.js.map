{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Expenses/ExpensesFilter.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","title","amount","ExpensesList","items","length","map","expense","id","ExpensesFilter","value","selected","onChange","event","onFilterChange","target","ChartBar","barFillHeight","maxValue","Math","round","toString","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","filter","ExpenseForm","enteredTitle","enteredAmount","enteredDate","userInput","setUserInput","onSubmit","e","preventDefault","expenseData","Date","onSaveExpenseData","onCancel","type","prevState","min","step","onClick","NewExpense","isEditting","setIsEditting","stopEdittingHandler","enteredExpenseDate","random","onAddExpense","DUMMY_EXPENSES","App","setExpenses","previousArray","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.68cb9567.chunk.js","sourcesContent":["import React from \"react\";\nimport './Card.css';\n\nconst Card = (props) => {\n    const classes = 'card ' + props.className;\n    return <div className={classes}>{props.children}</div>\n}\n\n\nexport default Card;","import React from \"react\";\nimport './ExpenseDate.css'\n\nconst ExpenseDate = (props) => {\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\n  const year = props.date.getFullYear();\n\n  return (\n    <div className=\"expense-date\">\n      <div className=\"expense-date__month\">{month}</div>\n      <div className=\"expense-day\">{day}</div>\n      <div className=\"expense-date__year\">{year}</div>\n    </div>\n  );\n}\n\nexport default ExpenseDate;\n","import React from \"react\";\nimport \"./ExpenseItem.css\";\nimport Card from \"../UI/Card\"\nimport ExpenseDate from \"./ExpenseDate\";\n\nconst ExpenseItem = (props) => {\n  return (\n    <li>\n      <Card className=\"expense-item\">\n        <ExpenseDate date={props.date} />\n        <div className=\"expense-item__description\">\n          <h2>{props.title}</h2>\n        </div>\n        <div className=\"expense-item__price\">${props.amount}</div>\n      </Card>\n    </li>\n  );\n}\n\nexport default ExpenseItem;\n","import ExpenseItem from \"./ExpenseItem\";\nimport './ExpensesList.css'\n\nconst ExpensesList = props => {\n  if (props.items.length === 0) {\n      return <h2 className=\"expenses-list__fallback\">Found no expenses.</h2>\n  }\n\n  return <ul className=\"expenses-list\">\n      {props.items.map((expense) => (\n      <ExpenseItem\n        title={expense.title}\n        amount={expense.amount}\n        date={expense.date}\n        key={expense.id}\n      />\n    ))};\n  </ul>\n}\n\nexport default ExpensesList;","import React from 'react';\n\nimport './ExpensesFilter.css';\n\nconst ExpensesFilter = (props) => {\n \n  const filterChangeHandler = (event) => {\n    props.onFilterChange(event.target.value);\n  }\n  \n  return (\n    <div className='expenses-filter'>\n      <div className='expenses-filter__control'>\n        <label>Filter by year</label>\n        <select value={props.selected} onChange={filterChangeHandler}>\n          <option value='2022'>2022</option>\n          <option value='2021'>2021</option>\n          <option value='2020'>2020</option>\n          <option value='2019'>2019</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpensesFilter;","import './ChartBar.css';\n\nconst ChartBar = props => {\n    let barFillHeight = '0%';\n\n    if(props.maxValue > 0) {\n        barFillHeight = Math.round((props.value / props.maxValue) * 100).toString() + '%';\n    }\n\n    return <div className='chart-bar'>\n        <div className='chart-bar__inner'>\n            <div className='chart-bar__fill' style={{height: barFillHeight}}></div>\n        </div>\n        <div className='chart-bar__label'>{props.label}</div>\n    </div>\n};\n\nexport default ChartBar;","import ChartBar from \"./ChartBar\";\nimport \"./Chart.css\";\n\nconst Chart = (props) => {\n  const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\n  const totalMaximum = Math.max(...dataPointValues);\n\n  return (\n    <div className=\"chart\">\n      {props.dataPoints.map((dataPoint) => (\n        <ChartBar\n          key={dataPoint.label}\n          value={dataPoint.value}\n          maxValue={totalMaximum}\n          label={dataPoint.label}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Chart;\n","import Chart from \"../Chart/Chart\";\n\nconst ExpensesChart = (props) => {\n    const chartDataPoints = [\n        { label: 'Jan', value: 0 },\n        { label: 'Feb', value: 0 },\n        { label: 'Mar', value: 0 },\n        { label: 'Apr', value: 0 },\n        { label: 'May', value: 0 },\n        { label: 'Jun', value: 0 },\n        { label: 'Jul', value: 0 },\n        { label: 'Aug', value: 0 },\n        { label: 'Sep', value: 0 },\n        { label: 'Oct', value: 0 },\n        { label: 'Nov', value: 0 },\n        { label: 'Dec', value: 0 },\n    ];\n\n    for (const expense of props.expenses) {\n        const expenseMonth = expense.date.getMonth(); // starting at 0 => January => 0\n        chartDataPoints[expenseMonth].value += expense.amount;\n    }\n    \n    return <Chart dataPoints={chartDataPoints} />;\n}\n\nexport default ExpensesChart;","import React, {useState} from \"react\";\nimport \"./Expenses.css\";\nimport Card from \"../UI/Card\";\nimport ExpensesList from \"./ExpensesList\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport ExpensesChart from \"./ExpensesChart\";\n\nconst Expenses = (props) => {\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\n\n  const filterChangeHandler = (date) => {\n    setFilteredYear(date);\n  };\n\n  const filteredExpenses = props.items.filter((expense) => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n\n  \n  return (\n    <>\n      <Card className=\"expenses\">\n        <ExpensesFilter\n          selected={filteredYear}\n          onFilterChange={filterChangeHandler}\n        />\n        <ExpensesChart expenses={filteredExpenses} />\n        <ExpensesList items={filteredExpenses} />\n      </Card>\n    </>\n  );\n};\n\nexport default Expenses;\n","import \"./ExpenseForm.css\";\nimport { useState } from \"react\";\n\nconst ExpenseForm = (props) => {\n  //   const [enteredTitle, setEnteredTitle] = useState(\"\");\n  //   const [enteredAmount, setEnteredAmount] = useState(\"\");\n  const [userInput, setUserInput] = useState({\n    enteredTitle: \"\",\n    enteredAmount: \"\",\n    enteredDate: \"\",\n  });\n\n  const titleChangeHandler = (e) => {\n    setUserInput((prevState) => {\n      return {\n        ...prevState,\n        enteredTitle: e.target.value,\n      };\n    });\n  };\n\n  const amountChangeHandler = (e) => {\n    setUserInput((prevState) => {\n      return {\n        ...prevState,\n        enteredAmount: e.target.value,\n      };\n    });\n  };\n\n  const dateChangeHandler = (e) => {\n    setUserInput((prevState) => {\n      return {\n        ...prevState,\n        enteredDate: e.target.value,\n      };\n    });\n  };\n\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    const expenseData = {\n      title: userInput.enteredTitle,\n      amount: +userInput.enteredAmount,\n      date: new Date(userInput.enteredDate),\n    };\n    props.onSaveExpenseData(expenseData);\n    setUserInput({\n      enteredTitle: \"\",\n      enteredAmount: \"\",\n      enteredDate: \"\",\n    });\n    props.onCancel();\n  };\n\n return  (\n    <form onSubmit={submitHandler}>\n      <div className=\"new-expense__controls\">\n        <div className=\"new-expense__control\">\n          <label>Title</label>\n          <input\n            type=\"text\"\n            onChange={titleChangeHandler}\n            value={userInput.enteredTitle}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Amount</label>\n          <input\n            type=\"number\"\n            min=\"0.01\"\n            step=\"0.01\"\n            value={userInput.enteredAmount}\n            onChange={amountChangeHandler}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Date</label>\n          <input\n            type=\"date\"\n            min=\"2019-01-01\"\n            step=\"2022-12-31\"\n            value={userInput.enteredDate}\n            onChange={dateChangeHandler}\n          />\n        </div>\n      </div>\n      <div className=\"new-expense__actions\">\n        <button type=\"button\" onClick={props.onCancel}>Cancel</button>\n        <button type=\"submit\">Add Expense</button>\n      </div>\n    </form>\n )\n};\n\nexport default ExpenseForm;\n","import React, { useState } from \"react\";\nimport \"./NewExpense.css\";\nimport ExpenseForm from \"./ExpenseForm\";\n\nconst NewExpense = (props) => {\n  const saveExpenseDataHandler = (enteredExpenseDate) => {\n    const expenseData = {\n      ...enteredExpenseDate,\n      id: Math.random().toString(),\n    };\n    props.onAddExpense(expenseData);\n    stopEdittingHandler();\n  };\n\n  const [isEditting, setIsEditting] = useState(false);\n\n  const startEditingHandler = () => {\n    setIsEditting(true);\n  };\n\n  const stopEdittingHandler = () => {\n    setIsEditting(false);\n  };\n\n  return (\n    <div className=\"new-expense\">\n      {!isEditting && (\n        <button onClick={startEditingHandler}>Add New Expense</button>\n      )}\n      {isEditting && (\n        <ExpenseForm\n          onSaveExpenseData={saveExpenseDataHandler}\n          onCancel={stopEdittingHandler}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default NewExpense;\n","import React, { useState }  from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nconst DUMMY_EXPENSES = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { \n    id: \"e2\", title: \"New TV\", \n    amount: 799.49, \n    date: new Date(2021, 2, 12),\n  },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nconst App = () => {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = (expense) => {\n    setExpenses((previousArray) => {\n      return [expense, ...previousArray];\n    });\n  };\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses} />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}